// Peripheral/Parallel Interface Registers
PI_DRAM_ADDR_REG = 0xa4600000; // size:0x4
PI_CART_ADDR_REG = 0xa4600004; // size:0x4
PI_RD_LEN_REG = 0xa4600008; // defined:true size:0x4
PI_WR_LEN_REG = 0xa460000c; // size:0x4
D_A4600005 = 0xA4600005; // defined:True // TODO figure out its name
D_A4600006 = 0xA4600006; // defined:True // TODO figure out its name
D_A4600007 = 0xA4600007; // defined:True // TODO figure out its name
PI_STATUS_REG = 0xA4600010; // defined:True
PI_BSD_DOM1_LAT_REG = 0xA4600014; // defined:True // PI dom1 latency
PI_BSD_DOM1_PWD_REG = 0xA4600018; // defined:True // PI dom1 pulse width
PI_BSD_DOM1_PGS_REG = 0xA460001C; // defined:True // PI dom1 page size
PI_BSD_DOM1_RLS_REG = 0xA4600020; // defined:True // PI dom1 release
PI_BSD_DOM2_LAT_REG = 0xA4600024; // defined:True // PI dom2 latency
PI_BSD_DOM2_LWD_REG = 0xA4600028; // defined:True // PI dom2 pulse width
PI_BSD_DOM2_PGS_REG = 0xA460002C; // defined:True // PI dom2 page size
PI_BSD_DOM2_RLS_REG = 0xA4600030; // defined:True // PI dom2 release

// Generic N64 Register Info

KUBASE = 0;
K0BASE = 0x80000000; // defined:true
K1BASE = 0xA0000000; // defined:true
K2BASE = 0xC0000000; // defined:true

D_80000004 = 0x80000004; // ignore:true
D_80000008 = 0x80000008; // ignore:true
D_8000000C = 0x8000000C; // ignore:true

// Signal Processor Registers

SP_MEM_ADDR_REG = 0xA4040000;
SP_DRAM_ADDR_REG = 0xA4040004;
SP_RD_LEN_REG = 0xA4040008;
SP_WR_LEN_REG = 0xA404000C;
SP_STATUS_REG = 0xA4040010;
SP_DMA_FULL_REG = 0xA4040014;
SP_DMA_BUSY_REG = 0xA4040018;
SP_SEMAPHORE_REG = 0xA404001C;

D_A4080000 = 0xA4080000; // SP PC
D_A4620000 = 0xA4620000; // some hardware register?

// Display Processor Command Registers / Rasterizer Interface

DPC_START_REG = 0xA4100000;
DPC_END_REG = 0xA4100004;
DPC_CURRENT_REG = 0xA4100008;
DPC_STATUS_REG = 0xA410000C;
DPC_CLOCK_REG = 0xA4100010;
DPC_BUFBUSY_REG = 0xA4100014;
DPC_PIPEBUSY_REG = 0xA4100018;
DPC_TMEM_REG = 0xA410001C;

// Display Processor Span Registers

DPS_TBIST_REG = 0xA4200000;
DPS_TEST_MODE_REG = 0xA4200004;
DPS_BUFTEST_ADDR_REG = 0xA4200008;
DPS_BUFTEST_DATA_REG = 0xA420000C;

// MIPS Interface Registers

MI_MODE_REG = 0xA4300000;
MI_VERSION_REG = 0xA4300004;
MI_INTR_REG = 0xA4300008;
MI_INTR_MASK_REG = 0xA430000C;

// Video Interface Registers

VI_STATUS_REG = 0xA4400000;
VI_DRAM_ADDR_REG = 0xA4400004;
VI_WIDTH_REG = 0xA4400008;
VI_INTR_REG = 0xA440000C;
VI_CURRENT_REG = 0xA4400010;
VI_BURST_REG = 0xA4400014;
VI_V_SYNC_REG = 0xA4400018;
VI_H_SYNC_REG = 0xA440001C;
VI_LEAP_REG = 0xA4400020;
VI_H_START_REG = 0xA4400024;
VI_V_START_REG = 0xA4400028;
VI_V_BURST_REG = 0xA440002C;
VI_X_SCALE_REG = 0xA4400030;
VI_Y_SCALE_REG = 0xA4400034;

// Audio Interface Registers

AI_DRAM_ADDR_REG = 0xA4500000;
AI_LEN_REG = 0xA4500004;
AI_CONTROL_REG = 0xA4500008;
AI_STATUS_REG = 0xA450000C;
AI_DACRATE_REG = 0xA4500010;
AI_BITRATE_REG = 0xA4500014;

// RDRAM Interface Registers

D_A4700000 = 0xA4700000; // RI_MODE_REG
D_A4700004 = 0xA4700004; // RI_CONFIG_REG
D_A4700008 = 0xA4700008; // RI_CURRENT_LOAD_REG
D_A470000C = 0xA470000C; // RI_SELECT_REG
D_A4700010 = 0xA4700010; // RI_REFRESH_REG
D_A4700014 = 0xA4700014; // RI_LATENCY_REG
D_A4700018 = 0xA4700018; // RI_RERROR_REG
D_A470001C = 0xA470001C; // RI_WERROR_REG

// Serial Interface Registers

D_A4800000 = 0xA4800000; // SI_DRAM_ADDR_REG
SI_PIF_ADDR_RD64B_REG = 0xA4800004;
D_A4800008 = 0xA4800008; // reserved
D_A480000C = 0xA480000C; // reserved
SI_PIF_ADDR_WR64B_REG = 0xA4800010;
D_A4800014 = 0xA4800014; // reserved
SI_STATUS_REG = 0xA4800018;

// libleo (64DD) address range

LEO_STATUS = 0xA5000508;
LEO_BM_CTL = 0xA5000510;
LEO_SEQ_STATUS = 0xA5000518;
LEO_C2_BUFF = 0xA5000000;      // C2 Sector Buffer
LEO_SECTOR_BUFF = 0xA5000400;  // Data Sector Buffer
LEO_DATA = 0xA5000500;         // Data
LEO_MISC_REG = 0xA5000504;     // Misc Register
LEO_CUR_TK = 0xA500050C;       // Current Track
LEO_ERR_SECTOR = 0xA5000514;   // Sector Error Status
LEO_CUR_SECTOR = 0xA500051C;   // Current Sector
LEO_HARD_RESET = 0xA5000520;   // Hard Reset
LEO_C1_S0 = 0xA5000524;        // C1
LEO_HOST_SECBYTE = 0xA5000528; // Sector Size (in bytes)
LEO_C1_S2 = 0xA500052C;        // C1
LEO_SEC_BYTE = 0xA5000530;     // Sectors per Block, Full Size
LEO_C1_S4 = 0xA5000534;        // C1
LEO_C1_S6 = 0xA5000538;        // C1
LEO_CUR_ADDR = 0xA500053C;     // Current Address?
LEO_ID_REG = 0xA5000540;       // ID
LEO_TEST_REG = 0xA5000544;     // Test Read
LEO_TEST_PIN_SEL = 0xA5000548; // Test Write
LEO_RAM_ADDR = 0xA5000580;     // Microsequencer RAM
