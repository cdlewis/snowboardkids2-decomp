resetScriptState = 0x800B386C; // rom:0x1E091C
initializeCutsceneCommand = 0x800B0328; // rom:0x1DD3D8

func_800B00C0_9FF70 = 0x800B00C0; // rom:0x9FF70
getCommandEntry = 0x800B00C0; // type:func rom:0x1DD170
getCommandEntryMasked = 0x800B00F4; // rom:0x1DD1A4
getCommandUnk7Field = 0x800B0114; 
getCommandDescription = 0x800B0138; 
incrementCommandIndexWithWrap = 0x800B0184;
decrementCommandIndexClamped = 0x800B01B4; 
clampCommandIndex = 0x800B01F0; 
getNextCategorySkipping = 0x800B0228;
getPrevCategorySkipping = 0x800B02B4;
executeCommandFunc2 = 0x800B043C; 
executeCommandFunc5 = 0x800B06FC;
getCategorySkipValue = 0x800B07F0; // rom:0x1DD8A0

commandCategories = 0x800BA570; // type:s32 size:0x48 rom:0x1E7620
commandTable = 0x800B9C70; // type:s32 size:0x900 rom:0x1E6D20

returnZero_1DF8B8 = 0x800B2808;
returnZero_1DF9DC = 0x800B292C;
returnZero_1DF9EC = 0x800B293C;

returnZero_1DD8C8 = 0x800B0818;
returnZero_1DD900 = 0x800B0850;
returnZero_1DD93C = 0x800B088C;

returnZero_1DED48 = 0x800B1C98;
returnZero_1DEDF4 = 0x800B1D44;
returnZero_1DEE04 = 0x800B1D54;
returnZero_1DEE4C = 0x800B1D9C;
returnZero_1DEE5C = 0x800B1DAC;
returnZero_1DEEA4 = 0x800B1DF4;
returnZero_1DEEB4 = 0x800B1E04;
returnZero_1DF044 = 0x800B1F94;
returnZero_1DF054 = 0x800B1FA4;
returnZero_1DF158 = 0x800B20A8;

returnZero_1DF1D0 = 0x800B2120;
returnZero_1DF244 = 0x800B2194;
returnZero_1DF2D8 = 0x800B2228;

returnZero_1DD978 = 0x800B08C8;
returnZero_1DD9C8 = 0x800B0918;
returnZero_1DDA4C = 0x800B099C;
returnZero_1DDA5C = 0x800B09AC;
returnZero_1DDAAC = 0x800B09FC;
returnZero_1DDADC = 0x800B0A2C;

returnZero_1DDAF8 = 0x800B0A48;
returnZero_1DDBB8 = 0x800B0B08;
returnZero_1DDBC8 = 0x800B0B18;
returnZero_1DDCE8 = 0x800B0C38;
returnZero_1DDCF8 = 0x800B0C48;
returnZero_1DDD7C = 0x800B0CCC;
returnZero_1DDD8C = 0x800B0CDC;
returnZero_1DDDDC = 0x800B0D2C;
returnZero_1DDE2C = 0x800B0D7C;
returnZero_1DDF14 = 0x800B0E64;
returnZero_1DE038 = 0x800B0F88;
returnZero_1DE048 = 0x800B0F98;
returnZero_1DE0F8 = 0x800B1048;
returnZero_1DE108 = 0x800B1058;
returnZero_1DE1CC = 0x800B111C;
returnZero_1DE1DC = 0x800B112C;
returnZero_1DE2D0 = 0x800B1220;
returnZero_1DE34C = 0x800B129C;
returnZero_1DE35C = 0x800B12AC;
returnZero_1DE3E0 = 0x800B1330;
returnZero_1DE478 = 0x800B13C8;
returnZero_1DE488 = 0x800B13D8;
returnZero_1DE57C = 0x800B14CC;
returnZero_1DE58C = 0x800B14DC;
returnZero_1DE638 = 0x800B1588;
returnZero_1DE648 = 0x800B1598;
returnZero_1DE698 = 0x800B15E8;
returnZero_1DE720 = 0x800B1670;
returnZero_1DE730 = 0x800B1680;
returnZero_1DE7E4 = 0x800B1734;
returnZero_1DE7F4 = 0x800B1744;
returnZero_1DE868 = 0x800B17B8;
returnZero_1DE910 = 0x800B1860;
returnZero_1DE920 = 0x800B1870;
returnZero_1DEB38 = 0x800B1A88;
returnZero_1DEB48 = 0x800B1A98;
returnZero_1DEC18 = 0x800B1B68;
returnZero_1DEC28 = 0x800B1B78;
returnZero_1DECC0 = 0x800B1C10;
returnZero_1DECD0 = 0x800B1C20;

returnZero_1DF334 = 0x800B2284;
returnZero_1DF398 = 0x800B22E8;
returnZero_1DF3A8 = 0x800B22F8;
returnZero_1DF40C = 0x800B235C;
returnZero_1DF41C = 0x800B236C;
returnZero_1DF590 = 0x800B24E0;
returnZero_1DF5A0 = 0x800B24F0;
returnZero_1DF5CC = 0x800B251C;
returnZero_1DF648 = 0x800B2598;
returnZero_1DF6C4 = 0x800B2614;
returnZero_1DF834 = 0x800B2784;
returnZero_1DF844 = 0x800B2794;
returnZero_1DF89C = 0x800B27EC;

returnZero_1DF318 = 0x800B2268;

noop_1DF8B = 0x800B2800;
noop_1DF9E4 = 0x800B2934;

noop_1DD8C0 = 0x800B0810;
noop_1DD8F8 = 0x800B0848;
noop_1DD934 = 0x800B0884;

noop_1DF1C8 = 0x800B2118;
noop_1DF23C = 0x800B218C;
noop_1DF2D0 = 0x800B2220;

noop_1DD970 = 0x800B08C0;
noop_1DD9C0 = 0x800B0910;
noop_1DDA54 = 0x800B09A4;
noop_1DDAA4 = 0x800B09F4;

noop_1DDAF0 = 0x800B0A40;
noop_1DDBC0 = 0x800B0B10;
noop_1DDCF0 = 0x800B0C40;
noop_1DDD84 = 0x800B0CD4;
noop_1DDDD4 = 0x800B0D24;
noop_1DDE24 = 0x800B0D74;
noop_1DDF0C = 0x800B0E5C;
noop_1DE040 = 0x800B0F90;
noop_1DE100 = 0x800B1050;
noop_1DE1D4 = 0x800B1124;
noop_1DE2C8 = 0x800B1218;
noop_1DE354 = 0x800B12A4;
noop_1DE3D8 = 0x800B1328;
noop_1DE480 = 0x800B13D0;
noop_1DE584 = 0x800B14D4;
noop_1DE640 = 0x800B1590;
noop_1DE690 = 0x800B15E0;
noop_1DE728 = 0x800B1678;
noop_1DE7EC = 0x800B173C;
noop_1DE860 = 0x800B17B0;
noop_1DE918 = 0x800B1868;
noop_1DEB40 = 0x800B1A90;
noop_1DEC20 = 0x800B1B70;
noop_1DECC8 = 0x800B1C18;

noop_1DF310 = 0x800B2260;
noop_1DF32C = 0x800B227C;
noop_1DF3A0 = 0x800B22F0;
noop_1DF414 = 0x800B2364;
noop_1DF598 = 0x800B24E8;
noop_1DF5C4 = 0x800B2514;
noop_1DF640 = 0x800B2590;
noop_1DF6BC = 0x800B260C;
noop_1DF83C = 0x800B278C;

noop_1DF170 = 0x800B20C0;
returnZero_1DF168 = 0x800B20B8;
noop_1DED40 = 0x800B1C90;
noop_1DEDFC = 0x800B1D4C;
noop_1DEE54 = 0x800B1DA4;
noop_1DEEAC = 0x800B1DFC;
noop_1DF04C = 0x800B1F9C;
noop_1DF160 = 0x800B20B0;


identityMatrix = 0x8009A870; // type:s16 size:0x20

gBufferedFrameCounter = 0x800AB12C;
gFrameCounter = 0x800AB064;

getRand = 0x800AFF94; // type:func rom:0x9FE54
randA = 0x800AFF44;
randB = 0x800AFF6C; // type:func rom:0x9FE2C
initRand = 0x800AFF30; // type:func rom:0x9FDF0
gRandIndexA = 0x800B00B0;
gRandIndexB = 0x800B00B4;
gRandTable = 0x800AFFB0; // type:u8 size:0x50

PaintShopLabel = 0x8008D810;
InformationLabel = 0x8008D824;
ShootCrossLabel = 0x8008D838;
ChrSelectLabel = 0x8008D84C;
BoardShopLabel = 0x8008D860;
TrickGameLabel = 0x8008D874;
SaveLoadLabel= 0x8008D888;
RankingLabel = 0x8008D89C;
SpeedCrossLabel = 0x8008D8B0;
SendenLabel = 0x8008D8C4;

D_8008BFA0_8CBA0 = 0x8008BFA0; // size:0x50
createTaskQueue = 0x80069470;

loadAsset_B7E70 = 0x80055E7C;
loadAsset_216290 = 0x80055EA4;
loadAsset_34CB50 = 0x80055ED0;
loadAsset_34F7E0 = 0x80055F80;
loadAsset_34F9A0 = 0x80055EFC;
loadAsset_350140 = 0x80055F28;
loadAsset_3505F0 = 0x80055F54;
loadAssetByIndex_5E990 = 0x8005DD90;
loadAssetByIndex_94F90 = 0x8005D990;
loadAssetByIndex_95200 = 0x8005D9D0;
loadAssetByIndex_95380 = 0x8005DA84;
loadAssetByIndex_953B0 = 0x8005DAAC;
loadAssetByIndex_953E0 = 0x8005DA20;
loadAssetByIndex_95590 = 0x8005DB80;
loadAssetByIndex_95770 = 0x8005DD20;
loadAssetByIndex_95470 = 0x8005DB00;
loadAssetByIndex_95500 = 0x8005DB48;
loadAssetByIndex_95668 = 0x8005DBD0;
loadAssetByIndex_95728 = 0x8005DC48;

D_80091450_92050 = 0x80091450; // size:0xC0
D_80091310_91F10 = 0x80091310; // size:0xC0
D_800913D0_91FD0 = 0x800913D0; // size:0x80

gSchedulerListSentinel = 0x800A3270;
gFreeSchedulerList = 0x800A32C0;
gActiveSchedulerList = 0x800A3274;
terminateSchedulerWithCallback = 0x800697CC; 
D_800A3370_A3F70 = 0x800A3370; // size:0x18
D_800A3410_A4010 = 0x800A3410; // size:0xC

gConnectedControllerMask = 0x800A9018;
D_800A1C08_A2808 = 0x800A1C08; // size:0x4

queueDmaTransferToBuffer = 0x8003BB68;

gfxResultQueue = 0x800A2CF0;
gfxTaskQueue = 0x800A2CD0;

gGraphicsManager = 0x800A2990;

D_800A2D10_A3910 = 0x800A2D10; // size:0x30

setBufferData = 0x80056A88;

gSchedulerPool = 0x800A2D70; // size:0x500

terminateAllTasks = 0x80069D34;
terminateTasksByType = 0x80069D7C;
terminateTasksByTypeAndID = 0x80069DD4;
loadDataSegment = 0x8006A0EC;
initTaskScheduler = 0x800692F0;
setupTaskSchedulerNodes = 0x800698EC;
allocateTaskMemory = 0x80069854;
getTableEntryByU16Index = 0x80019280;
getTableEntryByIndex = 0x800192CC;
renderTextPalette = 0x80068128;
renderTextColored = 0x800689C0;
enqueueTextRender = 0x800688D4;

gTextClipAndOffsetData = 0x800AFCD4; // type:s16 size:0xC
gFontDisplayListSetup = 0x8009A820;
gFontTextureData = 0x800A2D60;
gFontPaletteBase = 0x800A2D64;
gCurrentPaletteId = 0x800A2D68;
gGraphicsMode = 0x800AB060;
gDefaultFontPalette = 0x800AB258;
gTextureEnabled = 0x800AFCE0;

initializeOverlaySystem = 0x80067FB0;
loadAssetMetadataByIndex = 0x80067F5C;
loadAssetMetadata = 0x80067F0C;
enqueueMultiPartDisplayList = 0x80065900;
enqueueDisplayListWithFrustumCull = 0x80063788;
enqueueDisplayListObject = 0x800635CC;
setupDisplayListMatrix = 0x8006318C;

arenaAlloc16 = 0x8006F580;
parseGameDataLayout = 0x800609A0;
D_80091250_91E50 = 0x80091250; // type:s32 size:0xC0
D_800BBB90_B7DD0 = 0x800BBB90; // type:s32 rom:0xB7DD0 size:0x122890

getFreeNodeCount = 0x80069AEC;
setCallback = 0x80069CC0;
setCallbackWithContinue = 0x80069CD0;
setCleanupCallback = 0x80069CE8;
hasActiveTasks = 0x80069D20;
processActiveTasks = 0x80069B04;
runTaskSchedulers = 0x80069530;
gDMAOverlay = 0x8009A864;
gActiveScheduler = 0x8009A860;
load_3ECE40 = 0x8005DAD4;
piDmaHandlerThread = 0x8003B6B4;
gDmaCompressionBuffer = 0x800A2494;

D_80093974_94574 = 0x80093974; // type:s32 size:0x18C
D_800937C0_943C0 = 0x800937C0; // type:s32 size:0x28
D_800937E8_943E8 = 0x800937E8; // type:s32 size:0x18C

D_800947E0_953E0 = 0x800947E0; // type:s32 size:0x90
D_80094870_95470 = 0x80094870; // type:s32 size:0x90
D_80094900_95500 = 0x80094900; // type:s32 size:0x90
D_80094990_95590 = 0x80094990; // type:s32 size:0x90
D_80094A68_95668 = 0x80094A68; // type:s32 size:0xC0
D_80094B70_95770 = 0x80094B70; // type:s32 size:0xC0
D_80094C30_95830 = 0x80094C30; // type:s32 size:0x90

initializeGameEntity = 0x80001A6C;
queueDmaTransfer = 0x8003B8F0;
loadAssetDataByMode = 0x80001714;
loadAssetGroupSoundData = 0x80001818;
loadAssetGroupVertexData = 0x800018AC;
loadAssetGroupDisplayList = 0x80001868;
__MusIntStartEffect = 0x80074704;
func_800725F4_731F4 = 0x800725F4;
__MusIntFindChannelAndStart = 0x80072540;
__MusIntRemapPtrs = 0x800746CC;
__muscontrol_flag = 0x800AB480;
__MusIntFifoOpen = 0x80072ED8;
audio_heap = 0x800A64D8; // type:s32 size:0x10
mus_random_seed = 0x800A650C;
mus_current_handle = 0x800A6508;
plr_player = 0x800A64C0; // type:s32 size:0x14
libmus_fxheader_current = 0x800A6514;
libmus_fxheader_single = 0x800A6510;
MusPtrBankInitialize = 0x8007418C;
mus_next_frame_time = 0x800A6500;
__MusIntMain = 0x800730EC;
__MusIntRandom = 0x80074324;
__MusIntProcessContinuousPitchBend = 0x80073EE4;
__MusIntSetPitch = 0x80073928;
__MusIntPowerOf2 = 0x80073FF8;
mus_channels = 0x800A64F0;
mus_voices = 0x800A64EC;
max_channels = 0x800A64E8;
mus_vsyncs_per_second = 0x800A64FC;
gAudioMsgBuffer = 0x800A64A0;
gAudioDmaMessages = 0x800A649C;
gAudioNodePool = 0x800A6498;
gMaxVoices = 0x800A64A4;
gAudioThreadCreated = 0x8009B03C;
gAudioRspCmdCount = 0x800A6478;
audioManagerThread = 0x80071000;
loadAudioDataWithCache = 0x800712D4;
initAudioDriveAndGetLoader = 0x800714D8;
gAudioUnderrunFlag = 0x8009B044;
handleAudioUnderrun = 0x80071294;
gCartRomHandle = 0x800A64AC;
gDriveRomHandle = 0x800A64B0;
gDriveRomInitialized = 0x800A6460;
gAudioManagerStack = 0x800A445C;
gAudioManager = 0x800A8D98; // type:u8 size:0x230

processAudioNodeList = 0x80071518;
gAudioMsgQueue = 0x800A6480;
gActiveListHead = 0x800A6464;
gCurrentFrame = 0x8009B030;
gPendingMessages = 0x8009B040;
audioCreateAndScheduleTask = 0x800710EC;
gAudioCmdBuffers = 0x800A8D90;
aspMainDataStart = 0x8009D270; // name_end:aspMainDataEnd
gAudioBufferPadding = 0x800A64A8;
gAudioBufferSize = 0x800A6470;
gMinAudioFrameSize = 0x800A646C;
gAudioCmdBufferToggle = 0x8009B038;
setGameStateHandler = 0x8006982C;
freeNodeMemory = 0x8006A200;
allocateNodeMemory = 0x8006A1C0;
scheduleTask = 0x800699F4;

gMemoryAllocatorHead = 0x800AB130;
gMemoryHeapBase = 0x8018F800; // type:s32 size:0x18
gMemoryHeapEnd = 0x8038F800;

initializeMemoryAllocatorRegion = 0x8006A220;
allocateMemoryNode = 0x8006A258;
decrementNodeRefCount = 0x8006A3FC;
cleanupUnusedNodes = 0x8006A428;
markNodeAsLocked = 0x8006A4DC;
unlockNodeWithInterruptDisable = 0x8006A4E8;
getNodeOwner = 0x8006A51C;
setNodeSequenceNumber = 0x8006A524;
getNodeUserData = 0x8006A52C;

gameAssets = 0x80089A6C; // type:s32 size:0x22BC

initializeGameState = 0x80016EA0;
gameStateCountdownHandler = 0x80017110;
gameStateCleanupHandler = 0x8001716C;
transitionToNextGameMode = 0x80017248;
transitionToMainMenu = 0x80017264;
setupGameStateTransition = 0x80017280;
setShortCountdownAndContinue = 0x800172DC;
invokeTransitionEffect = 0x8001730C;
cleanupTransitionEffect = 0x80017328;

dmaRequestAndUpdateState = 0x80069E3C;
dmaRequestAndUpdateStateWithSize = 0x80069F94;

dmaQueueRequest = 0x8003BA24;
gDmaQueueIndex = 0x800A2488;
gDmaQueue = 0x800A248C;
gDmaMsgQueue = 0x800A20F0;
gDmaRequestCount = 0x800A2490;
gPendingDmaCount = 0x8008FEA0;

buildDisplayListSegment = 0x80063824;

loadOverlay_1BBA0 = 0x8001AFA0;
loadOverlay_1DD170 = 0x80003488;
gLinearArenaBuffer = 0x800A3584;
initLinearArenaRegions = 0x8006F668;
gRegionAllocEnd = 0x800A3558;
gRegionAllocPtr = 0x800A8A84;
gLinearArenaRegions = 0x800A3580;
linearAllocSelectRegion = 0x8006F6AC;
advanceLinearAlloc = 0x8006F644;
gArenaBasePtr = 0x800A3574;
resetLinearAllocator = 0x8006F5EC;
gLinearAllocEnd = 0x800A357C;
gLinearAllocPtr = 0x800A3578;
linearAlloc = 0x8006F610;

initDebugCameraController = 0x8002ED90;
debugEnqueueCallback = 0x8006FF90;
updateDebugCameraYState = 0x8002EDEC;
D_80090520_91120 = 0x80090520; // type:u32

// wrong but hopefully it doesn't matter which overlay its mapped to (yet)
func_800BB2B0 = 0x800BB2B0; // type:func rom:0xAB160

func_800B3B40 = 0x800B3B40; // type:func rom:0x1E0BF0
func_800B02E0 = 0x800B02E0; // type:func rom:0x1DC480
func_800BBED8 = 0x800BBED8; // type:func rom:0xAE298
func_800BBB90 = 0x800BBB90; // type:func rom:0xADF50
func_800BBA50 = 0x800BBA50; // type:func rom:0xAD4D0
func_800BBB34 = 0x800BBB34; // type:func rom:0xB4AC4
func_800B34F0 = 0x800B34F0; // type:func rom:0x1E05A0
func_800B305C = 0x800B305C; // type:func rom:0x1E010C
func_800B2F2C = 0x800B2F2C; // type:func rom:0x1DFFDC
func_800B016C = 0x800B016C; // type:func rom:0x1DC30C
func_800B46E0 = 0x800B46E0; // type:func rom:0x1E1790
func_800B9AE0 = 0x800B9AE0; // type:func rom:0xA9990
func_800BC9BC = 0x800BC9BC; // type:func rom:0xAED7C
func_800BBA98 = 0x800BBA98; // type:func rom:0xB7AF0
func_800BB504 = 0x800BB504; // type:func rom:0xACF84
func_800B0930 = 0x800B0930; // type:func rom:0x1DCAD0
func_800B3360 = 0x800B3360; // type:func rom:0x1E0410
func_800B9020 = 0x800B9020; // type:func rom:0x1E60D0
func_800B38E4 = 0x800B38E4; // type:func rom:0x1E0994
func_800B3570 = 0x800B3570; // type:func rom:0x1DFAA0
func_800BC0FC = 0x800BC0FC; // type:func rom:0xAEFA0
func_800B99E0 = 0x800B99E0; // type:func rom:0xA9890
func_800B2AA0 = 0x800B2AA0; // type:func rom:0x1DF850
func_800B2D04 = 0x800B2D04; // type:func rom:0x1DFDB4
func_800B0760 = 0x800B0760; // type:func rom:0x1DC900
func_800B2C78 = 0x800B2C78; // type:func rom:0x1DFD28
func_800B36C0 = 0x800B36C0; // type:func rom:0x1E0770

Overlays = 0x80090534; // type:u32 size:0x240

pushStartButtonText = 0x8009E7AC;

gControllerPackFreeBlockCount = 0x800AB24C;
gControllerPackFileCount = 0x800A8A88;
controllerPackReadStatus = 0x8003AB84;
controllerPackDeleteFile = 0x8003A9EC;
controllerPackDeleteFileFromHeader = 0x8003AAD4;
controllerPacks = 0x800A18C8;
initControllerPack = 0x8003A1EC;
initPiManager = 0x8003B5A0;
piManagerThreadStack = 0x800A20B0;

gPiDmaMsgQueue = 0x800A2130;
gPiDmaMsgBuf = 0x800A2148;
dmaLoadAndInvalidate = 0x8003BC60;

D_800A1C20_A2820 = 0x800A1C20; // type:u32 size:0x78

TrickTriggerCheck = 0x80019AC8;
TrickTriggerInit = 0x80019A80;
ClocktowerTriggerInit = 0x80019970;
ClocktowerTriggerCheck = 0x800199B8;
WallNewspaperTriggerInit = 0x80019420;
WallNewspaperTriggerCheck = 0x80019468;
createXRotationMatrix = 0x8006A5CC;
getCurrentAllocation = 0x800698BC;
PhoneTriggerInit = 0x80019320;
PhoneTriggerCheck = 0x80019368;
createZRotationMatrix = 0x8006A6B0;
distance_2d = 0x8006C590;
createYRotationMatrix = 0x8006A640;
approximateSin = 0x8006A540;
approximateCos = 0x8006A588;
approximate_sqrt = 0x8006C3F0;
rotateVectorY = 0x8006BC6C;
func_8006BDBC_6C9BC = 0x8006BDBC;
func_8006BE4C_6CA4C = 0x8006BE4C;

addViConfig = 0x800705D0;
sendMessageToEventQueue2 = 0x80070990;
sendMessageToThreadSyncQueue = 0x80070B9C;
removeViConfig = 0x80070650;

thread_function_1 = 0x80070448; 
thread_function_2 = 0x800706B8; 
thread_function_3 = 0x8007091C; 
thread_function_4 = 0x800709B8;

thread_a = 0x800A3900; // size:0x1B0
thread_b = 0x800A3F60; // size:0x1B0
thread_c = 0x800A35D0; // size:0x1B0
thread_d = 0x800A3C30; // size:0x1B0

thread_a_stack = 0x800A3780;
thread_b_stack = 0x800A3AB0;
thread_c_stack = 0x800A3DE0;
thread_d_stack = 0x800A4110;

viEventQueue = 0x800A4290;
eventQueue1 = 0x800A42B8;
eventQueue2 = 0x800A42F0;
threadSyncQueue = 0x800A4328;
taskCompletionQueue = 0x800A43C0;
eventQueue3 = 0x800A43E8;
frameBufferQueue = 0x800A4410;
eventQueue4 = 0x800A4438;

vertical_retrace_message = 0x8009AFF0;
sp_task_done_message = 0x8009AFFC;
dp_interrupt_message = 0x8009B008;
prenmi_interrupt_message = 0x8009B014;

currentViConfig = 0x800A4454;
frameCounter = 0x800A4458;
frameDelay = 0x800A445A;

initialize_video_and_threads = 0x800701B0;

mainMessageQueue = 0x800AB1B0;
mainMessageQueueBuffer = 0x800A32E0;

framebuffer_message = 0x800A4428;
vi_message = 0x800A42A8;
event_queue_1_message = 0x800A42D0;
event_queue_2_message = 0x800A4308;
thread_sync_message = 0x800A4340;
task_completion_message = 0x800A43D8;
event_queue_3_message = 0x800A4400;
event_queue_4_message = 0x800A4450;

idleThread = 0x800A24B0;
idleThreadEntrypoint = 0x8005600C;
mainThread = 0x800A27E0;
mainThreadEntrypoint = 0x8006DA40;
mainStack = 0x800AF490;

osViModeTable = 0x8009BE70; // defined:true

func_800B02AC = 0x800B02AC; // type:func

entrypoint = 0x80000400;
gMainThreadStackTop = 0x800AB020;
bootproc = 0x80055FB0;

// insanely speculative

MusInitialize = 0x80072030;
__MusIntMemSet = 0x8007466C;
__MusIntInitialiseChannel = 0x800743B8;
initAudioManager = 0x80070BD0;
__MusIntMemMove = 0x80074698;
__libmus_alglobals = 0x800A8FC8;

__MusIntFifoProcessCommand = 0x80072FD8;
__MusIntHandleSetFlag = 0x800747A0;

__MusIntStartSong = 0x800723C8;

// end insanely speculative

// moderately speculative

leoBootID = 0x800001A0;
osRomType = 0x80000304;
osResetType = 0x8000030C;
osCicId = 0x80000310;
osVersion = 0x80000314;
osMemSize = 0x80000318;

// end moderately speculative

osPfsFileState = 0x8007D050;

osPfsNumFiles = 0x8007D4E0;

osPfsReadWriteFile = 0x8007D5E0;

osPfsInitPak = 0x8007D2F0;

epirawread_rodata_0000 = 0x8009F160;
epirawread_rodata_0004 = 0x8009F164;

osCartRomInit = 0x8007BC10;
__CartRomHandle = 0x800AB0B8; // size:0x74
first = 0x8009BE10;

__osPfsLastChannel = 0x8009D230;

__osPiGetAccess = 0x800805E4;
__osPiRelAccess = 0x80080650;

spaces = 0x8009D1D0;
zeroes = 0x8009D1F4;
fchar = 0x8009EFE8;
fbit = 0x8009EFF0;

__osFinalrom = 0x800AFE88;
clock = 0x8009D024;
osClockRate = 0x8009D020;

osViModeMpalLan1 = 0x8009D170;
osViModePalLan1 = 0x8009D120;

vi = 0x8009D050;

send_mesg = 0x8007EBBC;

// probable player commands
player_commands_jumptable = 0x8009B050;

Fstop = 0x80071620;
Fwave = 0x80071640;
Fport = 0x80071670;
Fportoff = 0x80071690;
Fdefa = 0x8007169C;
Ftempo = 0x800717C4;
Fcutoff = 0x800718BC;
Fendit = 0x800718A8;
Fvibup = 0x800718E0;
Fvibdown = 0x80071950;
Fviboff = 0x800719C4;
Flength = 0x800719D4;
Fignore = 0x80071A14;
Ftrans = 0x80071A24;
Fignore_trans = 0x80071A34;
Fdistort = 0x80071A44;
Fenvelope = 0x80071A9C;
Fenvoff = 0x80071AFC;
Fenvon = 0x80071B0C;
Ftroff  = 0x80071B18;
Ftron = 0x80071B28;
Ffor = 0x80071B34;
Fnext = 0x80071BE8;
Fwobble = 0x80071C94;
Fwobbleoff = 0x80071CBC;
Fvelon = 0x80071CC8;
Fveloff = 0x80071CD8;
Fvelocity = 0x80071CE4;
Fpan = 0x80071CF8;
Fstereo = 0x80071D0C;
Fdrums = 0x80071D14;
Fdrumsoff = 0x80071D3C;
Fprint = 0x80071D48;
Fgoto = 0x80071D50;
Freverb = 0x80071DC0;
FrandNote = 0x80071DD0;
FrandVolume = 0x80071E20;
FrandPan = 0x80071E70;
Fvolume = 0x80071EC0;
Fstartfx = 0x80071ED0;
Fbendrange = 0x80071FA0;
Fsweep = 0x80071FDC;
Fchangefx = 0x80071FEC;

// probable libmus functions
CustomInit = 0x80074800;
CustomFxSet = 0x80074D04;
SetForCustom = 0x80074FE4;
GetFxLongest = 0x80075040;
GetFxMostSections = 0x80074FFC;
CustomAllocFX = 0x80074B1C;
CustomFxNew = 0x80074BB8;
gReverbFx = 0x800AFE60; // type:u8 size:0x28

// probable libmus data
EffectCount = 0x8009B2F0;
EffectList = 0x8009B2F4;
NoFxParams = 0x8009B2C8;
SmallRoomParams = 0x8009B100;
BigRoomParams = 0x8009B168;
ChorusParams = 0x8009B218;
FlangeParams = 0x8009B2A0;
EchoParams = 0x8009B1F0;

div64_32 = 0x80084354;
div64_64 = 0x80084258;
__muldi3 = 0x80084224;

osViGetNextFramebuffer = 0x8007ADF0; // guess
osInvalICache = 0x80076100; // guessing from assembly
__osBaseTimer = 0x800AB458; // guessing from timerintr.c

// guesses from libreultra exceptasm.s
__osThreadSave = 0x800A8B18;
__osIntOffTable = 0x8009EF20;
__osIntTable = 0x8009EF40;
__osHwIntTable = 0x8009CFF0;
__osPiIntTable = 0x8009D018;
__osShutdown = 0x8009D02C;
__osFaultedThread = 0x8009BB24;

// guesses from libreultra initialize.c
osInitialize = 0x8007EFA0;

D_8008DD4E_8E94E = 0x8008DD4E; // type:s16 size:0x2

osAppNmiBuffer = 0x8000031C;

jtbl_800BB020_AB3D0 = 0x800BB020; // type:u32 size:0x64
jtbl_800BB1B0_AB560 = 0x800BB1B0; // type:u32 size:0xA
jtbl_800BB1D8_AB588 = 0x800BB1D8; // type:u32 size:0x6
jtbl_800BB1F0_AB5A0 = 0x800BB1F0; // type:u32 size:0x6
jtbl_800BB208_AB5B8 = 0x800BB208; // type:u32 size:0x6
jtbl_800BB220_AB5D0 = 0x800BB220; // type:u32 size:0xA
jtbl_800BB248_AB5F8 = 0x800BB248; // type:u32 size:0xA
jtbl_800BB270_AB620 = 0x800BB270; // type:u32 size:0xC
jtbl_800BCBD0_ACF80 = 0x800BCBD0; // type:u32 size:0x4
jtbl_800BCC60_AD010 = 0x800BCC60; // type:u32 size:0x8

// Unknown RSP functions
func_8400103C = 0x8400103C;
func_84001008 = 0x84001008;
func_84001064 = 0x84001064;

// Auto discovered symbols

ChangeCustomEffect = 0x80075084;
DriveRomHandle = 0x800A8AA0; // type:OSPiHandle size:0x74
MusFxBankNumberOfEffects = 0x8007F610;
MusHandlePause = 0x80072E18;
MusHandleUnPause = 0x80072E3C;
MusPtrBankGetCurrent = 0x800801C0;
MusSetFxType = 0x80072E64;
MusSetMasterVolume = 0x8007239C;
_Ldtob = 0x800835E0;
_Litob = 0x80083390;
_Printf = 0x80080680;
__Dom1SpeedParam = 0x800AB1D0; // size:0x72
__Dom2SpeedParam = 0x800A8D18; // size:0x72
__OSGlobalIntMask = 0x8009D030;
__additional_scanline_0 = 0x8009AFD4;
__additional_scanline = 0x8009BE6C;
__allocParam = 0x8007A1CC;
__assert = 0x8007FB90;
__cosf = 0x800750E0;
__divdi3 = 0x80084420;
__dummy = 0x7FFFFD04;
__freeParam = 0x8007A1F8;
__libm_qnan_f = 0x8009EF70;
__osActiveQueue_0 = 0x8008BD28;
__osActiveQueue = 0x8009BB1C;
__osAiDeviceBusy = 0x8007FBA0;
__osBaseCounter = 0x800A8A9C;
__osCheckId = 0x80081744;
__osCleanupThread = 0x8007EF88;
__osContAddressCrc = 0x80081F60;
__osContDataCrc = 0x80081FCC;
__osContGetInitData = 0x8007B12C;
__osContLastCmd = 0x800AB252;
__osContPifRam = 0x800A8CD0;
__osContPifRam_0 = 0x800A8D08;
__osContPifRam_1 = 0x800A8D0C;
__osContRamRead = 0x80081B40;
__osContRamWrite = 0x80081D40;
__osCurrentHandle = 0x8009BE40;
__osCurrentTime = 0x800AB0A0;
__osCurrentTime_0 = 0x800AB0A4;
__osDequeueThread = 0x80076860;
__osDevMgrMain = 0x800801D0;
__osDisableInt = 0x8007F2E0;
__osDispatchThread = 0x8007EE0C;
__osEepPifRam = 0x800AB140;
__osEepPifRam_0 = 0x800AB17C;
__osEepStatus = 0x8007C2F0;
__osEepromTimer = 0x800AFCB0;
__osEepromTimerMsg = 0x800AB254;
__osEepromTimerQ = 0x800AFED8;
__osEnqueueAndYield = 0x8007ECAC;
__osEnqueueThread = 0x8007EDB4;
__osEventStateTab = 0x800AFDE8;
__osException = 0x8007E640;
__osExceptionPreamble = 0x8007E630;
__osGetActiveQueue = 0x80001560;
__osGetId = 0x80081578;
__osGetSR = 0x8007F2D0;
__osIdCheckSum = 0x800810E4;
__osInsertTimer = 0x8007FA80;
__osMaxControllers = 0x800AB09C;
__osMotorAccess = 0x8007C670;
__osPackEepReadData = 0x8007C058;
__osPackEepWriteData = 0x8007C248;
__osPfsGetOneChannelData = 0x80082E04;
__osPfsGetStatus = 0x80082C80;
__osPfsInodeCache = 0x800AFCE8;
__osPfsInodeCacheBank = 0x8009D224;
__osPfsPifRam = 0x800AFE90; // type:u32 size:0x40
__osPfsRWInode = 0x800817FC;
__osPfsSelectBank = 0x8007DBC0;
__osPiAccessQueue = 0x800AB180;
__osPiAccessQueueEnabled = 0x8009D1C0;
__osPiCreateAccessQueue = 0x80080590;
__osPiTable = 0x8009BE3C;
__osPopThread = 0x8007EDFC;
__osProbeTLB = 0x8007F320;
__osRcpImTable = 0x8009EC60;
__osResetGlobalIntMask = 0x80082EA0;
__osRestoreInt = 0x8007F300;
__osRunQueue = 0x8009BB18;
__osRunningThread = 0x8009BB20;
__osSetCompare = 0x80082E90;
__osSetFpcCsr = 0x8007F3E0;
__osSetGlobalIntMask = 0x80082EF0;
__osSetSR = 0x8007F3F0;
__osSetTimerIntr = 0x8007FA20;
__osSiAccessQueue = 0x800AFEF8;
__osSiAccessQueueEnabled = 0x8009D0C0;
__osSiCreateAccessQueue = 0x8007FF50;
__osSiDeviceBusy = 0x80082F80;
__osSiGetAccess = 0x8007FFA4;
__osSiRawStartDma = 0x8007DDC0;
__osSiRawWriteIo = 0x8007FEE0;
__osSiRelAccess = 0x80080010;
__osSpDeviceBusy = 0x8007FBC0;
__osSpGetStatus = 0x8007FBE0;
__osSiRawReadIo = 0x8007FE50;
__osSpRawStartDma = 0x8007FC30;
__osSpSetPc = 0x8007FC00;
__osSpSetStatus = 0x8007FBF0;
__osSumcalc = 0x800810B0;
__osThreadTail = 0x8009BB10;
__osTimerCounter = 0x800AB47C;
__osTimerInterrupt = 0x8007F8E4;
__osTimerList = 0x8009D040;
__osTimerServicesInit = 0x8007F890;
__osViCurr = 0x8009D0B0;
__osViGetCurrentContext = 0x8007FE40;
__osViInit = 0x8007FD30;
__osViIntrCount = 0x800AB04C;
__osViNext = 0x8009D0B4;
__osViSwapContext = 0x8007E320;
__udiv_w_sdiv = 0x80003464;
__udivdi3 = 0x80084590;
__umoddi3 = 0x800845B0;
_allocatePVoice = 0x8007A568;
bcmp = 0x80083280;
bzero = 0x8007B930;
_doModFunc = 0x80079A08;
_freePVoice = 0x8007A264;
_frexpf = 0x80078670;
_ldexpf = 0x80078750;
sqrtf = 0x8007F2B0;
_timeToSamples = 0x8007A2EC;
abs = 0x800187E4;
aisetfreq_rodata_0000 = 0x8009EF00;
aisetfreq_text_008C = 0x8007BB7C;
aisetnextbuf_data_0000 = 0x8009BDF0;
aisetnextbuf_text_004C = 0x8007AAAC;
alAdpcmPull = 0x80077130;
alAudioFrame = 0x8007A01C;
alAuxBusNew = 0x80077030;
alAuxBusParam = 0x80077D1C;
alAuxBusPull = 0x80077C40;
alClose = 0x80079BFC;
alCopy = 0x80079D10;
alEnvmixerNew = 0x80076E3C;
alEnvmixerParam = 0x8007829C;
alEnvmixerPull = 0x80077D50;
alFilterNew = 0x80078A80;
alFxNew = 0x800769A4;
alFxParam = 0x80079270;
alFxParamHdl = 0x80079284;
alFxPull = 0x80078EC0;
alGlobals = 0x8009BDE0;
alHeapDBAlloc = 0x80079CC0;
alHeapInit = 0x80079C80;
alInit = 0x80079BD0;
alLink = 0x80079C2C;
alLoadNew = 0x80076EF4;
alLoadParam = 0x80077910;
alMainBusNew = 0x8007708C;
alMainBusParam = 0x80078BE0;
alMainBusPull = 0x80078AA0;
alResampleNew = 0x80076FA4;
alResampleParam = 0x80078DFC;
alResamplePull = 0x80078C10;
alSaveNew = 0x800770E8;
alSaveParam = 0x80079BA0;
alSavePull = 0x80079AA0;
alSynAddPlayer = 0x8007A3F0;
alSynAllocFX = 0x8007A9B0;
alSynAllocVoice = 0x8007A440;
alSynDelete = 0x8007A3E0;
CustomSynNew = 0x80074850; // probably libmus
alSynNew = 0x80079D50;
alSynSetFXMix = 0x8007A890;
alSynSetPan = 0x8007A920;
alSynSetPitch = 0x8007A740;
alSynSetVol = 0x8007A7D0;
alSynStartVoice = 0x8007A6A0;
alSynStopVoice = 0x8007A620;
alUnlink = 0x80079C4C;
aspMainTextStart = 0x800846C0; // name_end:aspMainTextEnd
bcopy = 0x8007B610;
conteepprobe_text_0058 = 0x8007BE98;
conteepread_text_0080 = 0x8007BF40;
conteepread_text_016C = 0x8007C02C;
conteepwrite_text_0080 = 0x8007C160;
conteepwrite_text_013C = 0x8007C21C;
contpfs_data_0000 = 0x8009D220;
__osRepairPackId = 0x80081128;
__osCheckPackId = 0x80081414;
contpfs_text_04A4 = 0x80081554;
contpfs_text_0680 = 0x80081730;
contpfs_text_08E0 = 0x80081990;
contpfs_text_0A54 = 0x80081B04;
contreaddata_text_0124 = 0x8007C5B4;
controller_data_0000 = 0x8009BE00;
controller_text_0174 = 0x8007B104;
controller_text_0250 = 0x8007B1E0;
corrupted = 0x80082B18;
corrupted_init = 0x800829C0;
cosf_rodata_0008 = 0x8009EB58;
cosf_rodata_0010 = 0x8009EB60;
cosf_rodata_0018 = 0x8009EB68;
cosf_rodata_0020 = 0x8009EB70;
cosf_rodata_0028 = 0x8009EB78;
cosf_rodata_0030 = 0x8009EB80;
cosf_rodata_0038 = 0x8009EB88;
cosf_rodata_0048 = 0x8009EB98;
cosf_rodata_0050 = 0x8009EBA0;
cosf_text_0148 = 0x80075228;
coss = 0x80075230;
crc_text_0038 = 0x80081F98;
crc_text_00A8 = 0x80082008;
createSpeedParam = 0x8007F1F0;
destroythread_text_0048 = 0x8007F578;
destroythread_text_0098 = 0x8007F5C8;
devmgr_rodata_0000 = 0x8009EFC8; // type:jtbl
devmgr_text_0030 = 0x80080200;
devmgr_text_0358 = 0x80080528;
drvrnew_data_0168 = 0x8009BC98;
drvrnew_rodata_0000 = 0x8009ECE0;
drvrnew_rodata_0008 = 0x8009ECE8;
drvrnew_rodata_0020 = 0x8009ED00;
drvrnew_rodata_0028 = 0x8009ED08;
drvrnew_rodata_0030 = 0x8009ED10;
drvrnew_text_017C = 0x80076A7C;
drvrnew_text_03DC = 0x80076CDC;
drvrnew_text_04F4 = 0x80076DF4;
eqpower = 0x8009BCC0; // type:s16
env_rodata_0000 = 0x8009ED20;
env_rodata_0004 = 0x8009ED24;
env_rodata_0010 = 0x8009ED30;
env_rodata_0048 = 0x8009ED78;
env_rodata_0050 = 0x8009ED80;
env_rodata_0058 = 0x8009ED88;
env_rodata_0060 = 0x8009ED90;
env_rodata_00A0 = 0x8009EDD0;
env_rodata_00A8 = 0x8009EDD8;
env_rodata_00B0 = 0x8009EDE0;
env_rodata_00B8 = 0x8009EDE8;
env_rodata_00C0 = 0x8009EDF0;
env_rodata_00C8 = 0x8009EDF8;
env_rodata_00D0 = 0x8009EE00;
env_rodata_00D8 = 0x8009EE08;
env_rodata_00E0 = 0x8009EE10;
env_rodata_00E8 = 0x8009EE18;
env_text_01F4 = 0x80077F44;
env_text_030C = 0x8007805C;
env_text_043C = 0x8007818C;
env_text_04A8 = 0x800781F8;
env_text_05AC = 0x80078348;
env_text_05BC = 0x80078358;
env_text_05C4 = 0x80078360;
env_text_0620 = 0x80078370;
env_text_08C8 = 0x80078618;
env_text_08FC = 0x8007864C;
env_text_0980 = 0x80078748;
env_text_0A24 = 0x80078774;
env_text_0C24 = 0x800789EC;
env_text_0CA4 = 0x800789F4;
env_text_0CA8 = 0x80078A70;
epidma_text_0038 = 0x8007B438;
epidma_text_0084 = 0x8007B484;
epirawdma_text_0140 = 0x80082190;
epirawdma_text_01C4 = 0x80082214;
epirawdma_text_01D0 = 0x80082220;
epirawwrite_text_011C = 0x8008250C;
guDPLoadTextureTile_4b = 0x8085FD78;
guLookAtReflect = 0x800757D8;
guMtxF2L = 0x80075850;
guMtxIdent = 0x800759E0;
guMtxIdentF = 0x80075990;
guMtxL2F = 0x800758E8;
guPerspective = 0x80075C80;
guPerspectiveF = 0x80075AD0;
handle_CpU = 0x8007EC78;
heapinit_text_0020 = 0x80079CA0;
_init_lpfilter = 0x80076900;
jammesg_text_0110 = 0x8007F7C0;
ldiv = 0x80084060;
lldiv = 0x800840E4;
load_text_00CC = 0x800771FC;
load_text_0134 = 0x80077264;
load_text_0370 = 0x800774A0;
load_text_03BC = 0x800774EC;
load_text_03E0 = 0x80077510;
load_text_0414 = 0x80077544;
load_text_0444 = 0x80077574;
load_text_0514 = 0x80077644;
load_text_05D4 = 0x80077704;
load_text_0748 = 0x80077878;
load_text_07B8 = 0x800778E8;
load_text_0978 = 0x80077AA8;
load_text_0980 = 0x80077AB0;
load_text_098C = 0x80077ABC;
load_text_0A40 = 0x80077B70;
lookatref_rodata_0000 = 0x8009EBB0;
lookatref_rodata_0008 = 0x8009EBB8;
guLookAtReflectF = 0x80075260;
lookatref_text_02C4 = 0x80075524;
lookatref_text_0308 = 0x80075568;
lookatref_text_034C = 0x800755AC;
lookatref_text_0390 = 0x800755F0;
lookatref_text_03D4 = 0x80075634;
lookatref_text_0420 = 0x80075680;
memcpy = 0x8007BA2C;
motor_bss_0000 = 0x800A6570;
motor_bss_003C = 0x800A65AC;
motor_text_011C = 0x8007C78C;
motor_text_0128 = 0x8007C798;
motor_text_0334 = 0x8007C9A4;
motor_text_0370 = 0x8007C9E0;
myfree = 0x8009F1F8;
n_alSeqpDelete = 0x8000C590;
n_alSynRemovePlayer = 0x8006FF00;
osAiGetLength = 0x8007AA50;
osAiSetFrequency = 0x8007BAF0;
osAiSetNextBuffer = 0x8007AA60;
osContGetReadData = 0x8007C518;
osContInit = 0x8007AF90;
osContStartReadData = 0x8007C490;
osCreateMesgQueue = 0x800762B0;
osCreatePiManager = 0x8007DC30;
osCreateThread = 0x800762E0;
osCreateViManager = 0x8007DE70;
osDestroyThread = 0x8007F530;
osDriveRomInit = 0x8007B4A0;
__osEPiRawReadIo = 0x80082240;
__osEPiRawStartDma = 0x80082050;
__osEPiRawWriteIo = 0x800823F0;
osEPiStartDma = 0x8007B400;
osEepromLongRead = 0x8007B390;
osEepromLongWrite = 0x8007B2A0;
osEepromProbe = 0x8007BE40;
osEepromRead = 0x8007BEC0;
osEepromWrite = 0x8007C0E0;
osGetCount = 0x8007F2C0;
osGetThreadPri = 0x8007F600;
osGetTime = 0x8007F620;
osInvalDCache = 0x80076050;
osJamMesg = 0x8007F6B0;
osMapTLBRdb = 0x8007F4D0;
osMotorInit = 0x8007C7B4;
osPfsAllocateFile = 0x8007CA00;
osPfsChecker = 0x80082560;
osPfsDeleteFile = 0x8007CE30;
osPfsFindFile = 0x8007DA20;
osPfsFreeBlocks = 0x8007D1E0;
osPfsIsPlug = 0x80082FA0;
osPiGetCmdQueue = 0x800801B0;
__osPiRawReadIo = 0x80080040;
__osPiRawStartDma = 0x800800E0;
osPiStartDma = 0x8007B560;
osRecvMesg = 0x800763B0;
osRomBase = 0x80000308;
osSendMesg = 0x800764E0;
osSetEventMesg = 0x80076610;
osSetIntMask = 0x800761E0;
osSetThreadPri = 0x80076670;
osSetTimer = 0x8007F7F0;
osSpTaskLoad = 0x8007AB00;
osSpTaskStartGo = 0x8007AD0C;
osSpTaskYield = 0x8007AD40;
osSpTaskYielded = 0x8007AD60;
osStartThread = 0x80076740;
osTvType = 0x80000300;
osUnmapTLBAll = 0x8007F400;
osViBlack = 0x8007AF30;
osViClock = 0x8009D028;
osViExtendVStart = 0x8006F4F8;
osViGetCurrentFramebuffer = 0x8007ADB0;
osViModeNtscLan1 = 0x8009D0D0;
osViSetEvent = 0x8007AE30;
osViSetMode = 0x8007AE90;
osViSetSpecialFeatures = 0x8007E1B0;
osViSwapBuffer = 0x8007AEE0;
osVirtualToPhysical = 0x800768A0;
osVoiceCheckWord = 0x80000458;
osWritebackDCache = 0x8007F450;
osWritebackDCacheAll = 0x80076280;
osYieldThread = 0x80082F30;
perspective_rodata_0000 = 0x8009EBC0;
perspective_rodata_0008 = 0x8009EBC8;
perspective_rodata_0010 = 0x8009EBD0;
perspective_rodata_0018 = 0x8009EBD8;
perspective_rodata_0020 = 0x8009EBE0;
perspective_rodata_0028 = 0x8009EBE8;
perspective_rodata_0030 = 0x8009EBF0;
perspective_rodata_0038 = 0x8009EBF8;
perspective_text_0170 = 0x80075C40;
perspective_text_0328 = 0x80075DF8;
pfsallocatefile_text_02DC = 0x8007CCDC;
pfsallocatefile_text_030C = 0x8007CD0C;
pfsallocatefile_text_041C = 0x8007CE1C;
pfschecker_text_0190 = 0x800826F0;
pfschecker_text_01B0 = 0x80082710;
pfschecker_text_0428 = 0x80082988;
pfschecker_text_0430 = 0x80082990;
pfsdeletefile_text_0188 = 0x8007CFB8;
pfsdeletefile_text_01AC = 0x8007CFDC;
pfsfreeblocks_text_00E8 = 0x8007D2C8;
pfsgetstatus_text_00D4 = 0x80082D54;
pfsgetstatus_text_00F0 = 0x80082D70;
pfsisplug_text_00D8 = 0x80083078;
__osPfsRequestData = 0x8008311C;
__osPfsGetInitData = 0x800831C0;
pidma_text_0098 = 0x8007B5F8;
pimgr_bss_0000 = 0x800A6670;
pimgr_bss_11B0 = 0x800A7820;
pimgr_bss_11C8 = 0x800A7838;
pimgr_data_0000 = 0x8009BE20;
pimgr_data_0004 = 0x8009BE24;
pimgr_data_000C = 0x8009BE2C;
pimgr_data_0010 = 0x8009BE30;
pimgr_data_0014 = 0x8009BE34;
pimgr_data_0018 = 0x8009BE38;
pirawdma_text_00AC = 0x8008018C;
pirawdma_text_00B8 = 0x80080198;
pirawread_rodata_0000 = 0x8009EFB4;
pirawread_rodata_0004 = 0x8009EFB8; // type:asciz size:0x10
mus_master_volume_effects = 0x800A6504;
mus_master_volume_songs = 0x800A6506;
player_bss_003C = 0x8009BE28;
mus_songfxchange_flag = 0x800A6518;
mus_last_fxtype = 0x800A651C;
recvmesg_text_0104 = 0x800764B4;
resample_rodata_0000 = 0x8009EE20;
resample_rodata_0008 = 0x8009EE28;
resample_text_01C8 = 0x80078DD8;
resample_text_0294 = 0x80078EA4;
resample_text_029C = 0x80078EAC;
reverb_rodata_0000 = 0x8009EE50;
reverb_rodata_0000_0 = 0x8009EE60;
reverb_rodata_0004 = 0x8009EE54;
reverb_rodata_0020 = 0x8009EE80;
reverb_rodata_0028 = 0x8009EE88;
reverb_rodata_0030 = 0x8009EE90;
reverb_rodata_0038 = 0x8009EE98;
reverb_rodata_0040 = 0x8009EEA0;
reverb_rodata_0048 = 0x8009EEA8;
reverb_text_019C = 0x8007905C;
reverb_text_0568 = 0x80079464;
reverb_text_05B4 = 0x80079474;
reverb_text_075C = 0x80079658;
reverb_text_07CC = 0x8007968C;
reverb_text_08A8 = 0x800797A4;
reverb_text_093C = 0x800797FC;
reverb_text_0A3C = 0x80079938;
reverb_text_0AAC = 0x8007996C;
rspbootTextStart = 0x800845F0; // name_end:rspbootTextEnd
save_rodata_0000 = 0x8009EEB0;
save_rodata_0004 = 0x8009EEB4;
save_text_00C8 = 0x80079BC0;
sendmesg_text_010C = 0x800765EC;
siacs_bss_0000 = 0x800A8A60;
sinf = 0x80075E50;
sinf_rodata_0008 = 0x8009EC08;
sinf_rodata_0010 = 0x8009EC10;
sinf_rodata_0018 = 0x8009EC18;
sinf_rodata_0020 = 0x8009EC20;
sinf_rodata_0028 = 0x8009EC28;
sinf_rodata_0030 = 0x8009EC30;
sinf_rodata_0038 = 0x8009EC38;
sinf_rodata_0048 = 0x8009EC48;
sinf_rodata_0050 = 0x8009EC50;
sinf_text_00D8 = 0x80075F28;
sinf_text_0198 = 0x80075FE8;
sins = 0x80075FF0;
sintable = 0x8009B310;
sins_text_0024 = 0x80076014;
sins_text_004C = 0x8007603C;
sirawdma_text_006C = 0x8007DE2C;
sirawdma_text_0090 = 0x8007DE50;
sirawwrite_rodata_0000 = 0x8009EFA0;
sirawwrite_rodata_0004 = 0x8009EFA4;
sprawdma_rodata_0000 = 0x8009EF80;
sprawdma_rodata_0004 = 0x8009EF84;
sprawdma_text_00D0 = 0x8007FD00;
sirawread_rodata_0000 = 0x8009EF90;
sirawread_rodata_0004 = 0x8009EF94;
sprintf = 0x8007BA60;
sprintf_text_0058 = 0x8007BAB8;
spsetpc_text_0028 = 0x8007FC28;
sptask_bss_0000 = 0x800A6530;
sptask_bss_0004 = 0x800A6534;
sptask_bss_0010 = 0x800A6540;
sptask_bss_0018 = 0x800A6548;
sptask_bss_001C = 0x800A654C;
sptask_bss_0020 = 0x800A6550;
sptask_bss_0028 = 0x800A6558;
sptask_bss_002C = 0x800A655C;
sptask_bss_0030 = 0x800A6560;
sptask_bss_0038 = 0x800A6568;
sptask_bss_003C = 0x800A656C;
startthread_text_00A4 = 0x800767E4;
startthread_text_00F8 = 0x80076838;
strchr = 0x8007B9D0;
string_text_0030 = 0x8007BA00;
strlen = 0x8007BA08;
synallocvoice_text_00FC = 0x8007A53C;
synallocvoice_text_01C8 = 0x8007A608;
synthesizer_rodata_0000 = 0x8009EEC0;
synthesizer_rodata_0008 = 0x8009EEC8;
synthesizer_rodata_0010 = 0x8009EED0;
synthesizer_rodata_0018 = 0x8009EED8;
synthesizer_rodata_0020 = 0x8009EEE0;
synthesizer_rodata_0024 = 0x8009EEE4;
synthesizer_text_0160 = 0x800749B0;
synthesizer_text_0448 = 0x8007A198;
synthesizer_text_04C0 = 0x8007A210;
synthesizer_text_0554 = 0x8007A2A4;
synthesizer_text_05E8 = 0x8007A338;
thread_text_002C = 0x8007688C;
timerintr_text_0074 = 0x8007F904;
timerintr_text_0180 = 0x8007FA10;
timerintr_text_0300 = 0x8007FAE8;
vi_text_0094 = 0x8007FDC4;
viblack_text_0044 = 0x8007AF74;
vimgr_bss_0000 = 0x800A7840;
vimgr_bss_0008 = 0x800A7848;
vimgr_bss_11C0 = 0x800A8A00;
vimgr_bss_11D8 = 0x800A8A18;
vimgr_bss_11F0 = 0x800A8A30;
vimgr_bss_11F2 = 0x800A8A32;
vimgr_bss_11F4 = 0x800A8A34;
vimgr_bss_1208 = 0x800A8A48;
vimgr_bss_120A = 0x800A8A4A;
vimgr_bss_120C = 0x800A8A4C;
vimgr_data_0000 = 0x8009BE50;
vimgr_data_0004 = 0x8009BE54;
vimgr_data_0008 = 0x8009BE58;
vimgr_data_000C = 0x8009BE5C;
vimgr_data_0010 = 0x8009BE60;
vimgr_data_0014 = 0x8009BE64;
vimgr_data_0018 = 0x8009BE68;
vimgr_text_01A0 = 0x8007E010;
vimgr_text_01EC = 0x8007E064;
virtualtophysical_text_0048 = 0x800768E8;
viswapcontext_rodata_0000 = 0x8009EF10;
viswapcontext_text_0088 = 0x8007E3A8;
viswapcontext_text_011C = 0x8007E43C;
viswapcontext_text_0150 = 0x8007E470;

// xldtob

xldtob_rodata_0000 = 0x8009F180;
xldtob_rodata_0048 = 0x8009F1C8;
xldtob_rodata_004C = 0x8009F1CC;
xldtob_rodata_0050 = 0x8009F1D0;
xldtob_rodata_0058 = 0x8009F1D8;
xldtob_rodata_0060 = 0x8009F1E0; // type:u8 size:0x4
xldtob_text_0074 = 0x80083654;
xldtob_text_01D4 = 0x800837B4;
xldtob_text_0220 = 0x80083800;
xldtob_text_02B4 = 0x80083894;
xldtob_text_0344 = 0x80083924;
xldtob_text_03F0 = 0x800839D0;
xldtob_text_0410 = 0x800839F0;
xldtob_text_0440 = 0x80083A20;
xldtob_text_04D8 = 0x80083AB8;
xldtob_text_04DC = 0x80083AB0;
xldtob_text_0900 = 0x80083EE0;
xldtob_text_0A08 = 0x80083FE8;
xlitob_data_0000 = 0x8009D240;
xlitob_data_0014 = 0x8009D254;
xlitob_text_0074 = 0x80083404;
xlitob_text_0124 = 0x800834B4;

// xprintf

xprintf_rodata_0020 = 0x8009F008;
xprintf_rodata_0024 = 0x8009F00C;
xprintf_rodata_0028 = 0x8009F010;
xprintf_text_003C = 0x800806BC;
xprintf_text_004C = 0x800806CC;
xprintf_text_00A8 = 0x80080728;
xprintf_text_0180 = 0x80080800;
xprintf_text_0228 = 0x800808A8;
xprintf_text_0250 = 0x800808D0;
xprintf_text_0570 = 0x80080BF0;
xprintf_text_0658 = 0x80080CD8;
xprintf_text_06F4 = 0x80080D74;
xprintf_text_0758 = 0x80080DD8;
xprintf_text_0788 = 0x80080E08;
xprintf_text_07EC = 0x80080E6C;
xprintf_text_0898 = 0x80080F18;
xprintf_text_0A1C = 0x8008109C;
createRotationMatrixXZ = 0x8006A948;
createRotationMatrixYZ = 0x8006AA5C;
createRotationMatrixXYZ = 0x8006AB64;
createRotationMatrixZYX = 0x8006AD9C;
scaleMatrix = 0x8006AFEC;
createCombinedRotationMatrix = 0x8006A724;
createRotationMatrixYX = 0x8006A838;
func_8006B084_6BC84 = 0x8006B084;
transformVector = 0x8006B35C;
transformVector2 = 0x8006B5A8;
transformVector3 = 0x8006B7DC;
transformVectorRelative = 0x8006BA10;
isqrt64 = 0x8006C438;
distance_3d = 0x8006C5E0;
computeLookAtMatrix = 0x8006C654;
matrixToEulerAngles = 0x8006C8FC;
atan2Fixed = 0x8006CF7C;
